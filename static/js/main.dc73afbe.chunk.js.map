{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","id","type","className","onClick","preventDefault","text","completed","Math","random","class","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc73afbe.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n    const inputTextHandler = (e) => { \n        setInputText(e.target.value)\n    }\n    const submitTodoHandler = (e) => {\n         e.preventDefault()\n         setTodos([\n        ...todos,\n        {text: inputText, completed: false, id: Math.random() * 1000\n        }])\n        setInputText('')\n    }\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n    return(\n        <form>\n            <input value={inputText} onChange={inputTextHandler} id='inputField' type='text' className='todo-input' />\n            <button onClick={submitTodoHandler} className='todo-button' type='submit' >\n            <i class=\"fa fa-plus-square\"></i>\n            </button>\n            <div className=\"select\">\n                <select onChange={statusHandler} name='todos' className='filter-todo'>\n                    <option value = \"all\">All</option>\n                    <option value = \"completed\">Completed</option>\n                    <option value = \"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n        </form>\n    )\n}\n\nexport default Form\n","import React from 'react'\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n    //doubt\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id))\n    }\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed\n                }\n            }\n            return item\n        }))\n    }\n    return (\n        <div className = 'todo'>\n        <li className = {`todo-item ${todo.completed ? 'completed' : ''} `}>{text}</li>\n            <button onClick={completeHandler} className = 'complete-btn'>\n                <i className = 'fas fa-check'></i>\n            </button>\n            <button onClick={deleteHandler} className = 'trash-btn'>\n                <i className = 'fas fa-trash'></i>\n            </button>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({filteredTodos, todos, setTodos}) =>  {\n    \n    return (\n        <div className = 'todo-container'>\n            <ul className = 'todo-list'>{\n                filteredTodos.map((todo) =>(\n                    <Todo \n                    todos={todos} \n                    setTodos={setTodos}\n                    todo={todo} \n                    text={todo.text} />\n                )  \n                )}\n            </ul>\n        </div>\n    )\n}\n\n// key={todo.id} \n\nexport default TodoList\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Components/Form\";\nimport TodoList from \"./Components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandler();\n    // saveLocalTodos()\n  }, [todos, status]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Nancy's ToDo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}